{"export_version": "1.0", "main_tree": {"nodes": {"A Number": {"attributes": {"location": [-1095.7342262268066, 567.4873657226562], "label": "population", "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"int_": 20, "float_draft_": 5.0, "int_draft_": 20, "float_max": 50.0, "float_min": 5.0, "int_max": 50, "int_min": 5, "selected_mode": "int"}, "inputs": {"Float": {"bl_idname": "SvStringsSocket", "name": "Int", "properties": {"prop_name": "int_"}}}, "outputs": {"Int": {"bl_idname": "SvStringsSocket", "name": "Int", "properties": {"custom_draw": "mode_custom_draw"}}}, "bl_idname": "SvNumberNode"}, "A Number.001": {"attributes": {"location": [-1095.7342262268066, 485.1723937988281], "label": "generations", "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"int_": 1000, "float_draft_": 5.0, "int_draft_": 1000, "float_max": 50.0, "float_min": 5.0, "int_max": 10000, "int_min": 200, "selected_mode": "int"}, "inputs": {"Float": {"bl_idname": "SvStringsSocket", "name": "Int", "properties": {"prop_name": "int_"}}}, "outputs": {"Int": {"bl_idname": "SvStringsSocket", "name": "Int", "properties": {"custom_draw": "mode_custom_draw"}}}, "bl_idname": "SvNumberNode"}, "A Number.002": {"attributes": {"location": [-1095.7342262268066, 320.5424499511719], "label": "mutator", "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"float_": 0.05000000074505806, "float_draft_": 0.05000000074505806, "int_draft_": 1000, "float_max": 0.5, "float_min": 0.009999999776482582, "int_max": 10000, "int_min": 200}, "inputs": {"Float": {"bl_idname": "SvStringsSocket", "name": "Float", "properties": {"prop_name": "float_"}}}, "outputs": {"Float_001": {"bl_idname": "SvStringsSocket", "name": "Float", "properties": {"custom_draw": "mode_custom_draw"}}}, "bl_idname": "SvNumberNode"}, "A Number.003": {"attributes": {"location": [-1095.7342262268066, 402.857421875], "label": "threshold", "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"float_": 0.699999988079071, "float_draft_": 0.800000011920929, "int_draft_": 20, "float_max": 0.9950000047683716, "float_min": 0.5, "int_max": 50, "int_min": 5}, "inputs": {"Float": {"bl_idname": "SvStringsSocket", "name": "Float", "properties": {"prop_name": "float_"}}}, "outputs": {"Float_001": {"bl_idname": "SvStringsSocket", "name": "Float", "properties": {"custom_draw": "mode_custom_draw"}}}, "bl_idname": "SvNumberNode"}, "A Number.004": {"attributes": {"location": [-1095.7342262268066, 151.3394317626953], "label": "case", "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"int_": 1, "float_draft_": 5.0, "int_draft_": 1, "float_max": 0.5, "float_min": 0.009999999776482582, "int_max": 1, "int_min": 0, "selected_mode": "int"}, "inputs": {"Float": {"bl_idname": "SvStringsSocket", "name": "Int", "properties": {"prop_name": "int_"}}}, "outputs": {"Int": {"bl_idname": "SvStringsSocket", "name": "Int", "properties": {"custom_draw": "mode_custom_draw"}}}, "bl_idname": "SvNumberNode"}, "A Number.005": {"attributes": {"location": [-1095.7342262268066, 233.65440368652344], "label": "selector", "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"float_": 0.20000000298023224, "float_draft_": 0.07999999821186066, "int_draft_": 20, "float_max": 0.5, "float_min": 0.07999999821186066, "int_max": 50, "int_min": 5}, "inputs": {"Float": {"bl_idname": "SvStringsSocket", "name": "Float", "properties": {"prop_name": "float_"}}}, "outputs": {"Float_001": {"bl_idname": "SvStringsSocket", "name": "Float", "properties": {"custom_draw": "mode_custom_draw"}}}, "bl_idname": "SvNumberNode"}, "Convex Hull": {"attributes": {"location": [123.68951416015625, 779.032543182373], "parent": {"type": "NODE", "value": "Frame.002"}}, "inputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices"}}, "outputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices"}, "Polygons": {"bl_idname": "SvStringsSocket", "name": "Polygons"}}, "bl_idname": "SvConvexHullNodeMK2"}, "Frame": {"attributes": {"location": [-20.88473892211914, 228.81857299804688], "height": 1038.0, "width": 499.0, "label": "INPUTS", "color": [0.1581861972808838, 0.6079999804496765, 0.1858440488576889], "use_custom_color": true}, "bl_idname": "NodeFrame"}, "Frame.001": {"attributes": {"location": [-40.918941497802734, 8.438382148742676], "height": 674.0, "width": 641.0, "label": "GENETIC ALGORITHM PROCESS", "color": [0.6079999804496765, 0.29834824800491333, 0.17616866528987885], "use_custom_color": true}, "bl_idname": "NodeFrame"}, "Frame.002": {"attributes": {"location": [-22.27130126953125, -44.47954177856445], "height": 603.9999389648438, "width": 853.0, "label": "OUTPUT", "color": [0.15239807963371277, 0.4163794219493866, 0.6079999804496765], "use_custom_color": true}, "bl_idname": "NodeFrame"}, "Frame.003": {"attributes": {"location": [-22.27130126953125, -44.47954177856445], "height": 298.0, "width": 561.0, "label": "check Volume", "color": [0.6079999804496765, 0.6079999804496765, 0.6079999804496765], "use_custom_color": true, "parent": {"type": "NODE", "value": "Frame.002"}}, "bl_idname": "NodeFrame"}, "Frame.004": {"attributes": {"location": [-42.478782653808594, -29.040255546569824], "height": 318.0, "width": 392.0, "label": "Path of honor", "color": [0.6079999804496765, 0.5722179412841797, 0.5722179412841797], "use_custom_color": true, "parent": {"type": "NODE", "value": "Frame.001"}}, "bl_idname": "NodeFrame"}, "IcoSphere": {"attributes": {"location": [-1107.3847389221191, 1039.5549011230469], "color": [0.9200000166893005, 0.9200000166893005, 0.9200000166893005], "use_custom_color": true, "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"subdivisions": 0, "radius": 2.0}, "inputs": {"Subdivisions": {"bl_idname": "SvStringsSocket", "name": "Subdivisions", "properties": {"prop_name": "subdivisions", "nesting_level": 1, "pre_processing": "ONE_ITEM"}}, "Radius": {"bl_idname": "SvStringsSocket", "name": "Radius", "properties": {"prop_name": "radius", "nesting_level": 1, "pre_processing": "ONE_ITEM"}}}, "outputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices"}, "Edges": {"bl_idname": "SvStringsSocket", "name": "Edges"}, "Faces": {"bl_idname": "SvStringsSocket", "name": "Faces"}}, "bl_idname": "SvIcosphereNode"}, "List Join": {"attributes": {"location": [575.8462524414062, 762.6065788269043], "parent": {"type": "NODE", "value": "Frame.003"}}, "inputs": {"data": {"bl_idname": "SvStringsSocket", "name": "data"}, "data 1": {"bl_idname": "SvStringsSocket", "name": "data 1"}, "data 2": {"bl_idname": "SvStringsSocket", "name": "data 2"}}, "outputs": {"data": {"bl_idname": "SvStringsSocket", "name": "data"}}, "bl_idname": "ListJoinNode"}, "Move": {"attributes": {"location": [-808.3847389221191, 900.1359558105469], "width": 133.2548828125, "parent": {"type": "NODE", "value": "Frame"}}, "inputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices"}, "Movement Vectors": {"bl_idname": "SvVerticesSocket", "name": "Movement Vectors", "properties": {"prop_name": "movement_vectors", "expanded": true}}, "Strength": {"bl_idname": "SvStringsSocket", "name": "Strength", "properties": {"prop_name": "strength"}}}, "outputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices"}}, "bl_idname": "SvMoveNodeMk3"}, "Move.001": {"attributes": {"location": [-808.3847389221191, 1039.5549011230469], "parent": {"type": "NODE", "value": "Frame"}}, "inputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices"}, "Movement Vectors": {"bl_idname": "SvVerticesSocket", "name": "Movement Vectors", "properties": {"prop_name": "movement_vectors", "expanded": true}}, "Strength": {"bl_idname": "SvStringsSocket", "name": "Strength", "properties": {"prop_name": "strength"}}}, "outputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices"}}, "bl_idname": "SvMoveNodeMk3"}, "Note": {"attributes": {"location": [-1147.5604248046875, 1210.0062255859375], "width": 509.6258544921875, "color": [1.0, 0.8993440270423889, 0.9742509722709656], "use_custom_color": true}, "properties": {"n_id": "-7878835450997684598", "text": "Nikitron 2020 - genetic algorithm attempt. Moving data set points to fit pattern. turn off processing and use ctrl+F5 to run once. Threshold inside SNL till 0.995, not more"}, "inputs": {"Text In": {"bl_idname": "SvStringsSocket", "name": "Text In"}}, "outputs": {"Text Out": {"bl_idname": "SvStringsSocket", "name": "Text Out"}}, "bl_idname": "NoteNode"}, "Scripted Node Lite": {"attributes": {"location": [-551.2872276306152, 750.9560213088989], "color": [0.0, 0.6000000238418579, 0.800000011920929], "use_custom_color": true, "parent": {"type": "NODE", "value": "Frame.001"}}, "properties": {"script_name": "GA_lists_match.py", "script_str": "# taken from https://github.com/nortikin/simple-ga\n# comparing between vertices and choosing best match\n\nimport random\nfrom functools import reduce\nfrom statistics import mean, variance\n\n\n\"\"\"\nin  pattern v   d=[] n=0\nin  data    v   d=[] n=0\nin  population s d=20 n=2\nin  generations s d=10000 n=2\nin  threshold s d=0.9 n=2\nin  mutator s d=0.1 n=2\nin  selector s d=0.2 n=2\nin  all_apart s d=0 n=2\nout vers_final  v\nout vers_descr  v\n\"\"\"\n\n\nclass Agent:\n\n    def __init__(self, length):\n\n        self.string = [random.choice(data[0]) for _ in range(length)]\n        # self.string = ''.join(random.choice(data[0]) for _ in xrange(length))\n        self.fitness = -1\n\n    def __str__(self):\n\n        return 'String: ' + str(self.string) + ' Fitness: ' + str(self.fitness)\n\n\n\ndef compare_two_lists(agent_list,pattern):\n    \"\"\" fitness decision module \"\"\"\n    lenpat = len(pattern)\n    Ratio = []\n    for i in range(len(agent_list)):\n        j = i%lenpat\n        subpat = pattern[j]           \n        subagl = agent_list[i]\n        # main decision part here, so we assign \n        # coef to all or to separate and summ\n        if all_apart == 0:\n            # full match\n            coef = [1 if x in subpat else 0 for x in subagl]\n        elif all_apart == 1:\n            # closest\n            mainfunc = lambda y, x: (all_dif-abs(y-x))/all_dif\n            coef = list(map(mainfunc, subagl, subpat))\n        else:\n            coef = [1 if x in subpat else 0 for x in subagl]\n        Ratio.append(mean(coef))\n    Ratio = mean(Ratio)\n    #print (Ratio)\n    return Ratio\n\n\ndef ga():\n\n    agents = init_agents(population, in_str_len)\n    stepper = 0.1\n\n    for generation in range(generations):\n\n        #print ('Generation: ' + str(generation))\n\n        agents = fitness(agents)\n        agents = selection(agents)\n        agents = crossover(agents)\n        agents = mutation(agents)\n\n        if any(agent.fitness >= stepper for agent in agents):\n            combo.append(sorted(agents, key=lambda agent: agent.fitness, reverse=True)[0].string)\n            stepper += 0.1\n        if any(agent.fitness >= threshold for agent in agents):\n\n            print (f'Last generation #{str(generation)}')\n            agent = sorted(agents, key=lambda agent: agent.fitness, reverse=True)[0]\n            print (f'GA ended with {type(agent.string)} {len(agent.string)}, \\\n                     \\n{agent.string[:3]}... \\\n                     \\nFitness: {agent.fitness}')\n            return agent.string\n    return [None]\n    \n\n\ndef init_agents(population, length):\n\n    return [Agent(length) for _ in range(population)]\n\n\ndef fitness(agents):\n\n    for agent in agents:\n        agent.fitness = compare_two_lists(agent.string, in_str)\n\n    return agents\n\n\ndef selection(agents):\n\n    agents = sorted(agents, key=lambda agent: agent.fitness, reverse=True)\n    #print ('\\n'.join(map(str, agents)))\n    agents = agents[:int(selector * len(agents))]\n\n    return agents\n\n\ndef crossover(agents):\n\n    offspring = []\n\n    for _ in range((population - len(agents)) // 2):\n\n        parent1 = random.choice(agents)\n        parent2 = random.choice(agents)\n        child1 = Agent(in_str_len)\n        child2 = Agent(in_str_len)\n        split = random.randint(0, in_str_len)\n        child1.string = parent1.string[0:split] + parent2.string[split:in_str_len]\n        child2.string = parent2.string[0:split] + parent1.string[split:in_str_len]\n\n        offspring.append(child1)\n        offspring.append(child2)\n\n    agents.extend(offspring)\n\n    return agents\n\n\ndef mutation(agents):\n\n    for agent in agents:\n        for idx, param in enumerate(agent.string):\n            if random.uniform(0.0, 1.0) <= mutator:\n                if all_apart == 0:\n                    agent.string = agent.string[0:idx] + \\\n                                [(random.choice(data[0]))] + \\\n                                agent.string[idx+1:in_str_len]\n                elif all_apart == 1:\n                    agent.string = agent.string[0:idx] + \\\n                                [[random.uniform(-mutator,mutator)+d for d in param]] + \\\n                                agent.string[idx+1:in_str_len]\n                else:\n                    agent.string = agent.string[0:idx] + \\\n                                [(random.choice(data[0]))] + \\\n                                agent.string[idx+1:in_str_len]\n\n    return agents\n\nif data and pattern:\n    in_str = pattern[0]\n    emax = lambda a,b: a if (a > b) else b\n    emin = lambda a,b: a if (a < b) else b\n    all_max = reduce(emax,[reduce(emax, x) for x in in_str])\n    all_min = reduce(emin,[reduce(emin, x) for x in in_str])\n    all_dif = all_max-all_min\n    print(f'GA initialised with {type(in_str)} {len(in_str)} \\\n            \\n{in_str[:3]}...')\n    in_str_len = len(in_str)\n    combo = []\n    vers_final = [ga()]\n    vers_descr = combo\n", "n_id": "-7858083208254504702"}, "inputs": {"pattern": {"bl_idname": "SvVerticesSocket", "name": "pattern"}, "data": {"bl_idname": "SvVerticesSocket", "name": "data"}, "population": {"bl_idname": "SvStringsSocket", "name": "population", "properties": {"use_prop": true, "default_property_type": "int", "default_int_property": 20}}, "generations": {"bl_idname": "SvStringsSocket", "name": "generations", "properties": {"use_prop": true, "default_property_type": "int", "default_int_property": 10000}}, "threshold": {"bl_idname": "SvStringsSocket", "name": "threshold", "properties": {"use_prop": true, "default_float_property": 0.8999999761581421}}, "mutator": {"bl_idname": "SvStringsSocket", "name": "mutator", "properties": {"use_prop": true, "default_float_property": 0.10000000149011612}}, "selector": {"bl_idname": "SvStringsSocket", "name": "selector", "properties": {"use_prop": true, "default_float_property": 0.20000000298023224}}, "all_apart": {"bl_idname": "SvStringsSocket", "name": "all_apart", "properties": {"use_prop": true, "default_property_type": "int"}}}, "outputs": {"vers_final": {"bl_idname": "SvVerticesSocket", "name": "vers_final"}, "vers_descr": {"bl_idname": "SvVerticesSocket", "name": "vers_descr"}}, "bl_idname": "SvScriptNodeLite"}, "Stethoscope MK2.002": {"attributes": {"location": [747.2333984375, 758.956371307373], "label": "\u0431\u044b\u043b\u043e/\u0441\u0442\u0430\u043b\u043e", "color": [1.0, 0.8993440270423889, 0.9742509722709656], "use_custom_color": true, "parent": {"type": "NODE", "value": "Frame.003"}}, "properties": {"text_color": [0.949999988079071, 0.949999988079071, 0.949999988079071], "num_elements": 2, "location_theta": 1.0080000162124634}, "inputs": {"Data": {"bl_idname": "SvStringsSocket", "name": "Data"}}, "bl_idname": "SvStethoscopeNodeMK2"}, "UV Connection": {"attributes": {"location": [-331.89119720458984, 1013.7838411331177], "parent": {"type": "NODE", "value": "Frame.004"}}, "properties": {"dir_check": "V_dir", "polygons": "Edges", "slice_check": false}, "inputs": {"vertices": {"bl_idname": "SvVerticesSocket", "name": "vertices"}, "vertices 1": {"bl_idname": "SvVerticesSocket", "name": "vertices 1"}, "vertices 2": {"bl_idname": "SvVerticesSocket", "name": "vertices 2"}, "vertices 3": {"bl_idname": "SvVerticesSocket", "name": "vertices 3"}}, "outputs": {"vertices": {"bl_idname": "SvVerticesSocket", "name": "vertices"}, "data": {"bl_idname": "SvStringsSocket", "name": "data"}}, "bl_idname": "LineConnectNodeMK2"}, "Vector In": {"attributes": {"location": [-1107.3847389221191, 878.1359558105469], "width": 100.0, "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"x_": 3.0, "y_": 3.0, "z_": 3.0}, "inputs": {"X": {"bl_idname": "SvStringsSocket", "name": "X", "properties": {"prop_name": "x_"}}, "Y": {"bl_idname": "SvStringsSocket", "name": "Y", "properties": {"prop_name": "y_"}}, "Z": {"bl_idname": "SvStringsSocket", "name": "Z", "properties": {"prop_name": "z_"}}}, "outputs": {"Vectors": {"bl_idname": "SvVerticesSocket", "name": "Vectors"}}, "bl_idname": "GenVectorsNode"}, "Viewer Draw Mk3": {"attributes": {"location": [363.2350158691406, 1041.9264640808105], "color": [0.6284880042076111, 0.931007981300354, 1.0], "use_custom_color": true, "parent": {"type": "NODE", "value": "Frame.002"}}, "properties": {"display_faces": false, "selected_draw_mode": "facet", "vector_color": [0.5, 1.0, 0.5, 1.0]}, "inputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices", "properties": {"custom_draw": "draw_property_socket"}}, "Edges": {"bl_idname": "SvStringsSocket", "name": "Edges", "properties": {"custom_draw": "draw_property_socket"}}, "Polygons": {"bl_idname": "SvStringsSocket", "name": "Polygons"}, "Matrix": {"bl_idname": "SvMatrixSocket", "name": "Matrix"}, "Vector Color": {"bl_idname": "SvColorSocket", "name": "Vector Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "vector_color"}}, "Edge Color": {"bl_idname": "SvColorSocket", "name": "Edge Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "edge_color"}}, "Polygon Color": {"bl_idname": "SvColorSocket", "name": "Polygon Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "polygon_color"}}, "attrs": {"bl_idname": "SvStringsSocket", "name": "attrs", "attributes": {"hide": true}, "properties": {"quick_link_to_node": "SvVDAttrsNodeMk2"}}}, "bl_idname": "SvViewerDrawMk4"}, "Viewer Draw Mk3.001": {"attributes": {"location": [-809.4932594299316, 759.5796813964844], "color": [0.6284880042076111, 0.931007981300354, 1.0], "use_custom_color": true, "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"display_faces": false, "edge_color": [1.0, 0.19698314368724823, 0.11354930698871613, 1.0], "use_dashed": true, "vector_color": [1.0, 0.19698314368724823, 0.11354930698871613, 1.0]}, "inputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices", "properties": {"custom_draw": "draw_property_socket"}}, "Edges": {"bl_idname": "SvStringsSocket", "name": "Edges", "properties": {"custom_draw": "draw_property_socket"}}, "Polygons": {"bl_idname": "SvStringsSocket", "name": "Polygons"}, "Matrix": {"bl_idname": "SvMatrixSocket", "name": "Matrix"}, "Vector Color": {"bl_idname": "SvColorSocket", "name": "Vector Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "vector_color"}}, "Edge Color": {"bl_idname": "SvColorSocket", "name": "Edge Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "edge_color"}}, "Polygon Color": {"bl_idname": "SvColorSocket", "name": "Polygon Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "polygon_color"}}, "attrs": {"bl_idname": "SvStringsSocket", "name": "attrs", "attributes": {"hide": true}, "properties": {"quick_link_to_node": "SvVDAttrsNodeMk2"}}}, "bl_idname": "SvViewerDrawMk4"}, "Viewer Draw Mk3.002": {"attributes": {"location": [-549.4794273376465, 1017.5534334182739], "color": [0.6284880042076111, 0.931007981300354, 1.0], "use_custom_color": true, "parent": {"type": "NODE", "value": "Frame.001"}}, "properties": {"display_edges": false, "display_faces": false, "vector_color": [0.5324395298957825, 0.5324395298957825, 0.5324395298957825, 1.0]}, "inputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices", "properties": {"custom_draw": "draw_property_socket"}}, "Edges": {"bl_idname": "SvStringsSocket", "name": "Edges", "properties": {"custom_draw": "draw_property_socket"}}, "Polygons": {"bl_idname": "SvStringsSocket", "name": "Polygons"}, "Matrix": {"bl_idname": "SvMatrixSocket", "name": "Matrix"}, "Vector Color": {"bl_idname": "SvColorSocket", "name": "Vector Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "vector_color"}}, "Edge Color": {"bl_idname": "SvColorSocket", "name": "Edge Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "edge_color"}}, "Polygon Color": {"bl_idname": "SvColorSocket", "name": "Polygon Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "polygon_color"}}, "attrs": {"bl_idname": "SvStringsSocket", "name": "attrs", "attributes": {"hide": true}, "properties": {"quick_link_to_node": "SvVDAttrsNodeMk2"}}}, "bl_idname": "SvViewerDrawMk4"}, "Viewer Draw Mk3.004": {"attributes": {"location": [-139.88164520263672, 1014.7195100784302], "color": [0.6284880042076111, 0.931007981300354, 1.0], "use_custom_color": true, "parent": {"type": "NODE", "value": "Frame.004"}}, "properties": {"display_faces": false, "edge_color": [0.4749784767627716, 0.4749784767627716, 0.4749784767627716, 1.0], "vector_color": [0.6358873844146729, 0.6358873844146729, 0.6358873844146729, 1.0]}, "inputs": {"Vertices": {"bl_idname": "SvVerticesSocket", "name": "Vertices", "properties": {"custom_draw": "draw_property_socket"}}, "Edges": {"bl_idname": "SvStringsSocket", "name": "Edges", "properties": {"custom_draw": "draw_property_socket"}}, "Polygons": {"bl_idname": "SvStringsSocket", "name": "Polygons"}, "Matrix": {"bl_idname": "SvMatrixSocket", "name": "Matrix"}, "Vector Color": {"bl_idname": "SvColorSocket", "name": "Vector Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "vector_color"}}, "Edge Color": {"bl_idname": "SvColorSocket", "name": "Edge Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "edge_color"}}, "Polygon Color": {"bl_idname": "SvColorSocket", "name": "Polygon Color", "properties": {"custom_draw": "draw_color_socket", "prop_name": "polygon_color"}}, "attrs": {"bl_idname": "SvStringsSocket", "name": "attrs", "attributes": {"hide": true}, "properties": {"quick_link_to_node": "SvVDAttrsNodeMk2"}}}, "bl_idname": "SvViewerDrawMk4"}, "Volume.002": {"attributes": {"location": [386.22869873046875, 766.2567863464355], "label": "\u043e\u0431\u044a\u0451\u043c \u0431\u044b\u043b", "parent": {"type": "NODE", "value": "Frame.003"}}, "inputs": {"Vers": {"bl_idname": "SvVerticesSocket", "name": "Vers"}, "Pols": {"bl_idname": "SvStringsSocket", "name": "Pols"}}, "outputs": {"Volume": {"bl_idname": "SvStringsSocket", "name": "Volume"}}, "bl_idname": "SvVolumeNodeMK2"}, "Volume": {"attributes": {"location": [386.22869873046875, 638.8378410339355], "label": "\u043e\u0431\u044a\u0451\u043c \u0441\u0442\u0430\u043b", "parent": {"type": "NODE", "value": "Frame.003"}}, "inputs": {"Vers": {"bl_idname": "SvVerticesSocket", "name": "Vers"}, "Pols": {"bl_idname": "SvStringsSocket", "name": "Pols"}}, "outputs": {"Volume": {"bl_idname": "SvStringsSocket", "name": "Volume"}}, "bl_idname": "SvVolumeNodeMK2"}, "Random Vector": {"attributes": {"location": [-1107.3847389221191, 728.231689453125], "parent": {"type": "NODE", "value": "Frame"}}, "properties": {"count_inner": 12, "scale": 2.0, "seed": 0}, "inputs": {"Count": {"bl_idname": "SvStringsSocket", "name": "Count", "properties": {"prop_name": "count_inner"}}, "Seed": {"bl_idname": "SvStringsSocket", "name": "Seed", "properties": {"prop_name": "seed"}}, "Scale": {"bl_idname": "SvStringsSocket", "name": "Scale", "properties": {"prop_name": "scale"}}}, "outputs": {"Random": {"bl_idname": "SvVerticesSocket", "name": "Random"}}, "bl_idname": "RandomVectorNodeMK3"}}, "links": [{"from_node": "Scripted Node Lite", "from_socket": "vers_final", "to_node": "Convex Hull", "to_socket": "Vertices"}, {"from_node": "Volume.002", "from_socket": "Volume", "to_node": "List Join", "to_socket": "data"}, {"from_node": "Volume", "from_socket": "Volume", "to_node": "List Join", "to_socket": "data 1"}, {"from_node": "Random Vector", "from_socket": "Random", "to_node": "Move", "to_socket": "Vertices"}, {"from_node": "Vector In", "from_socket": "Vectors", "to_node": "Move", "to_socket": "Movement Vectors"}, {"from_node": "IcoSphere", "from_socket": "Vertices", "to_node": "Move.001", "to_socket": "Vertices"}, {"from_node": "Vector In", "from_socket": "Vectors", "to_node": "Move.001", "to_socket": "Movement Vectors"}, {"from_node": "Move.001", "from_socket": "Vertices", "to_node": "Scripted Node Lite", "to_socket": "pattern"}, {"from_node": "Move", "from_socket": "Vertices", "to_node": "Scripted Node Lite", "to_socket": "data"}, {"from_node": "A Number", "from_socket": "Int", "to_node": "Scripted Node Lite", "to_socket": "population"}, {"from_node": "A Number.001", "from_socket": "Int", "to_node": "Scripted Node Lite", "to_socket": "generations"}, {"from_node": "A Number.003", "from_socket": "Float_001", "to_node": "Scripted Node Lite", "to_socket": "threshold"}, {"from_node": "A Number.002", "from_socket": "Float_001", "to_node": "Scripted Node Lite", "to_socket": "mutator"}, {"from_node": "A Number.005", "from_socket": "Float_001", "to_node": "Scripted Node Lite", "to_socket": "selector"}, {"from_node": "A Number.004", "from_socket": "Int", "to_node": "Scripted Node Lite", "to_socket": "all_apart"}, {"from_node": "List Join", "from_socket": "data", "to_node": "Stethoscope MK2.002", "to_socket": "Data"}, {"from_node": "Move", "from_socket": "Vertices", "to_node": "UV Connection", "to_socket": "vertices"}, {"from_node": "Scripted Node Lite", "from_socket": "vers_descr", "to_node": "UV Connection", "to_socket": "vertices 1"}, {"from_node": "Scripted Node Lite", "from_socket": "vers_final", "to_node": "UV Connection", "to_socket": "vertices 2"}, {"from_node": "Convex Hull", "from_socket": "Vertices", "to_node": "Viewer Draw Mk3", "to_socket": "Vertices"}, {"from_node": "Convex Hull", "from_socket": "Polygons", "to_node": "Viewer Draw Mk3", "to_socket": "Polygons"}, {"from_node": "Move.001", "from_socket": "Vertices", "to_node": "Viewer Draw Mk3.001", "to_socket": "Vertices"}, {"from_node": "IcoSphere", "from_socket": "Edges", "to_node": "Viewer Draw Mk3.001", "to_socket": "Edges"}, {"from_node": "Move", "from_socket": "Vertices", "to_node": "Viewer Draw Mk3.002", "to_socket": "Vertices"}, {"from_node": "UV Connection", "from_socket": "vertices", "to_node": "Viewer Draw Mk3.004", "to_socket": "Vertices"}, {"from_node": "UV Connection", "from_socket": "data", "to_node": "Viewer Draw Mk3.004", "to_socket": "Edges"}, {"from_node": "Move.001", "from_socket": "Vertices", "to_node": "Volume.002", "to_socket": "Vers"}, {"from_node": "IcoSphere", "from_socket": "Faces", "to_node": "Volume.002", "to_socket": "Pols"}, {"from_node": "Convex Hull", "from_socket": "Vertices", "to_node": "Volume", "to_socket": "Vers"}, {"from_node": "Convex Hull", "from_socket": "Polygons", "to_node": "Volume", "to_socket": "Pols"}]}}